"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var models_1 = require("../../models");
var utils_1 = require("../../utils");
var constants_1 = require("../../utils/constants");
var RobotProcessRequest = /** @class */ (function () {
    /**
     * Default constructor
     */
    function RobotProcessRequest() {
        var _this = this;
        /**
         * Request method to get all published robots in local machine.
         * @returns Promise of type Response.
         */
        this.send = function () { return utils_1.HttpUtil.get(_this.url, _this.convertToRobotProcesses); };
        /**
         * Set the port to which the request should be sent along with the consent code.
         * @param robotInvocationPort Port on which local listener is running.
         * @param consentCode User consented code.
         */
        this.set = function (robotInvocationPort, consentCode) {
            _this.url = _this.getURL(robotInvocationPort, consentCode);
            return _this;
        };
        this.convertToRobotProcesses = function (httpResponse) {
            if (httpResponse) {
                var jsonResponse = JSON.parse(httpResponse).response;
                if (jsonResponse && jsonResponse.length) {
                    return jsonResponse.map(function (r) { return new models_1.RobotProcess(r.Key, r.Name); });
                }
            }
            return [];
        };
        this.url = '';
    }
    /**
     * Method that returns the request endpoint to which request will be sent.
     * @param robotInvocationPort Port of local listener to which request should be sent.
     * @param consentCode User approved consent code if any.
     */
    RobotProcessRequest.prototype.getURL = function (robotInvocationPort, consentCode) {
        var url = constants_1.Constants.DEFAULT_ROBOT_INVOKE_DOMAIN + ":" + robotInvocationPort + "/" + constants_1.Constants.GET_ROBOT_PROCESSES;
        return utils_1.UrlUtil.appendConsentCode(url, consentCode);
    };
    return RobotProcessRequest;
}());
exports.RobotProcessRequest = RobotProcessRequest;
