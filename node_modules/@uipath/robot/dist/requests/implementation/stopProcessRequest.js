"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var constants_1 = require("../../utils/constants");
var httpUtil_1 = require("../../utils/httpUtil");
var urlUtil_1 = require("../../utils/urlUtil");
/**
 * Request class to cancel a running job.
 */
var StopProcessRequest = /** @class */ (function () {
    /**
     * Default constructor.
     * @param job Job object whose status we want to request
     */
    function StopProcessRequest(process) {
        var _this = this;
        this.process = process;
        /**
         * Method that sends the request to cancel running job.
         * @returns Promise of Response model type.
         */
        this.send = function () { return httpUtil_1.HttpUtil.get(_this.url, _this.convert); };
        this.convert = function (data) { return ''; };
        /**
         * Method that returns the request endpoint to which request will be sent.
         * @param robotInvocationPort Port of local listener to which request should be sent.
         * @param consentCode User approved consent code if any.
         * @param process Robot Process to stop
         */
        this.getURL = function (robotInvocationPort, consentCode, process) {
            var url = constants_1.Constants.DEFAULT_ROBOT_INVOKE_DOMAIN + ":" + robotInvocationPort + "/" + constants_1.Constants.STOP_PROCESS + "?robotProcessId=" + process.id;
            return urlUtil_1.UrlUtil.appendConsentCode(url, consentCode);
        };
        this.url = '';
    }
    /**
     * Set the port to which the request should be sent along with the consent code.
     * @param robotInvocationPort Port on which local listener is running.
     * @param consentCode User consented code.
     */
    StopProcessRequest.prototype.set = function (robotInvocationPort, consentCode) {
        this.url = this.getURL(robotInvocationPort, consentCode, this.process);
        return this;
    };
    return StopProcessRequest;
}());
exports.StopProcessRequest = StopProcessRequest;
