"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var applicationinsights_web_1 = require("@microsoft/applicationinsights-web");
/**
 * Appinsights logger. Stops logging for locally hosted files as file path might contain user info.
 */
var AppInsightsLogger = /** @class */ (function () {
    function AppInsightsLogger() {
        var _this = this;
        this.appInsights = new applicationinsights_web_1.ApplicationInsights({
            config: {
                instrumentationKey: process.env.NODE_ENV === 'production' ? '025bfd02-04e8-4969-8293-94a1ec738e4e' : '45d1ba3e-f027-4fb0-a1cc-d6874a40ec00',
            },
        });
        /**
        * Trace event method
        * @param event event name
        * @param properties properties to log along with the event.
        */
        this.trace = function (event, properties, appName) {
            if (window.location.protocol !== 'file:') {
                _this.appInsights.trackEvent({ name: event.toString(), properties: { application: appName } }, properties);
            }
        };
        /**
        * Tracing error
        * @param event event name
        * @param error Error to trace.
        */
        this.traceError = function (event, error, appName) {
            if (window.location.protocol !== 'file:') {
                _this.appInsights.trackException({
                    properties: { method: event.toString(), application: appName },
                    exception: new Error(error),
                });
            }
        };
        /**
        * Tracing page
        */
        this.tracePage = function () {
            if (window.location.protocol !== 'file:') {
                _this.appInsights.trackPageView();
            }
        };
        if (window.location.protocol !== 'file:') {
            this.appInsights.loadAppInsights();
        }
    }
    return AppInsightsLogger;
}());
exports.AppInsightsLogger = AppInsightsLogger;
