/**
 * Dispatcher class to allow event handling on custom classes.
 */
export declare class Dispatcher {
    private dispatchHandlers;
    constructor();
    /**
     * Event registration method.
     * @param eventName Name of the event to register.
     * @param handler callback function to call when the event occurs.
     */
    on(eventName: string, handler: (argument?: any) => void): void;
    /**
     * Dispatch method to dispatch registered callbacks on the occuring event.
     * @param eventName Name of the event that has occured.
     * @param argument Arguments to pass to callback if any.
     */
    dispatch(eventName: string, argument?: any): void;
    /**
     * Method to determine if a certain event has been registered.
     * @returns Boolean result
     */
    has: (eventName: string) => boolean;
}
