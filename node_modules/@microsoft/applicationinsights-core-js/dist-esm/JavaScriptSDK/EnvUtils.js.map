{"version":3,"file":"EnvUtils.js","sourceRoot":"","sources":["../../src/JavaScriptSDK/EnvUtils.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\n\r\nimport { \r\n    getGlobal as shimsGetGlobal, strShimUndefined, strShimObject, strShimPrototype, strShimFunction \r\n} from \"@microsoft/applicationinsights-shims\";\r\n\r\n/**\r\n * This file exists to hold environment utilities that are requied to check and\r\n * validate the current operating environment. Unless otherwise required, please\r\n * only defined methods (functions) in this class so that users of these \r\n * functions/properties only need to include those that are used within their own modules.\r\n */\r\n\r\nexport const strUndefined = strShimUndefined;\r\nexport const strObject = strShimObject;\r\nexport const strPrototype = strShimPrototype;\r\nexport const strFunction = strShimFunction;\r\n\r\nconst strWindow = \"window\";\r\nconst strDocument = \"document\";\r\nconst strNavigator = \"navigator\";\r\nconst strHistory = \"history\";\r\nconst strLocation = \"location\";\r\nconst strPerformance = \"performance\";\r\nconst strJSON = \"JSON\";\r\nconst strCrypto = \"crypto\";\r\n\r\n/**\r\n * Returns the current global scope object, for a normal web page this will be the current\r\n * window, for a Web Worker this will be current worker global scope via \"self\". The internal \r\n * implementation returns the first available instance object in the following order\r\n * - globalThis (New standard)\r\n * - self (Will return the current window instance for supported browsers)\r\n * - window (fallback for older browser implementations)\r\n * - global (NodeJS standard)\r\n * - <null> (When all else fails)\r\n * While the return type is a Window for the normal case, not all environments will support all\r\n * of the properties or functions.\r\n */\r\nexport const getGlobal:() => Window = shimsGetGlobal;\r\n\r\n/**\r\n * Return the named global object if available, will return null if the object is not available.\r\n * @param name The globally named object\r\n */\r\nexport function getGlobalInst<T>(name:string): T {\r\n    let gbl = getGlobal();\r\n    if (gbl && gbl[name]) {\r\n        return gbl[name] as T;\r\n    }\r\n\r\n    // Test workaround, for environments where <global>.window (when global == window) doesn't return the base window\r\n    if (name === strWindow && hasWindow()) {\r\n        // tslint:disable-next-line: no-angle-bracket-type-assertion\r\n        return <any>window as T;\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\n/**\r\n * Checks if window object is available, this is required as we support the API running without a \r\n * window /document (eg. Node server, electron webworkers) and if we attempt to assign a window \r\n * object to a local variable or pass as an argument an \"Uncaught ReferenceError: window is not defined\" \r\n * exception will be thrown.\r\n * Defined as a function to support lazy / late binding environments.\r\n */\r\nexport function hasWindow(): boolean {\r\n    return Boolean(typeof window === strObject && window);\r\n}\r\n\r\n/**\r\n * Returns the global window object if it is present otherwise null.\r\n * This helper is used to access the window object without causing an exception\r\n * \"Uncaught ReferenceError: window is not defined\"\r\n */\r\nexport function getWindow(): Window | null {\r\n    if (hasWindow()) {\r\n        return window;\r\n    }\r\n\r\n    // Return the global instance or null\r\n    return getGlobalInst(strWindow);\r\n}\r\n\r\n/**\r\n * Checks if document object is available, this is required as we support the API running without a \r\n * window /document (eg. Node server, electron webworkers) and if we attempt to assign a document \r\n * object to a local variable or pass as an argument an \"Uncaught ReferenceError: document is not defined\" \r\n * exception will be thrown.\r\n * Defined as a function to support lazy / late binding environments.\r\n */\r\nexport function hasDocument(): boolean {\r\n    return Boolean(typeof document === strObject && document);\r\n}\r\n\r\n/**\r\n * Returns the global document object if it is present otherwise null.\r\n * This helper is used to access the document object without causing an exception\r\n * \"Uncaught ReferenceError: document is not defined\"\r\n */\r\nexport function getDocument(): Document | null {\r\n    if (hasDocument()) {\r\n        return document;\r\n    }\r\n\r\n    return getGlobalInst(strDocument);\r\n}\r\n\r\n\r\n/**\r\n * Checks if navigator object is available, this is required as we support the API running without a \r\n * window /document (eg. Node server, electron webworkers) and if we attempt to assign a navigator \r\n * object to a local variable or pass as an argument an \"Uncaught ReferenceError: navigator is not defined\" \r\n * exception will be thrown.\r\n * Defined as a function to support lazy / late binding environments.\r\n */\r\nexport function hasNavigator(): boolean {\r\n    return Boolean(typeof navigator === strObject && navigator);\r\n}\r\n\r\n/**\r\n * Returns the global navigator object if it is present otherwise null.\r\n * This helper is used to access the navigator object without causing an exception\r\n * \"Uncaught ReferenceError: navigator is not defined\"\r\n */\r\nexport function getNavigator(): Navigator | null {\r\n    if (hasNavigator()) {\r\n        return navigator;\r\n    }\r\n\r\n    return getGlobalInst(strNavigator);\r\n}\r\n\r\n/**\r\n * Checks if history object is available, this is required as we support the API running without a \r\n * window /document (eg. Node server, electron webworkers) and if we attempt to assign a history \r\n * object to a local variable or pass as an argument an \"Uncaught ReferenceError: history is not defined\" \r\n * exception will be thrown.\r\n * Defined as a function to support lazy / late binding environments.\r\n */\r\nexport function hasHistory(): boolean {\r\n    return Boolean(typeof history === strObject && history);\r\n}\r\n\r\n/**\r\n * Returns the global history object if it is present otherwise null.\r\n * This helper is used to access the history object without causing an exception\r\n * \"Uncaught ReferenceError: history is not defined\"\r\n */\r\nexport function getHistory(): History | null {\r\n    if (hasHistory()) {\r\n        return history;\r\n    }\r\n\r\n    return getGlobalInst(strHistory);\r\n}\r\n\r\n/**\r\n * Returns the global location object if it is present otherwise null.\r\n * This helper is used to access the location object without causing an exception\r\n * \"Uncaught ReferenceError: location is not defined\"\r\n */\r\nexport function getLocation(): Location | null {\r\n    if (typeof location === strObject && location) {\r\n        return location;\r\n    }\r\n\r\n    return getGlobalInst(strLocation);\r\n}\r\n\r\n/**\r\n * Returns the performance object if it is present otherwise null.\r\n * This helper is used to access the performance object from the current\r\n * global instance which could be window or globalThis for a web worker\r\n */\r\nexport function getPerformance(): Performance | null {\r\n    return getGlobalInst(strPerformance);\r\n}\r\n\r\n/**\r\n * Checks if JSON object is available, this is required as we support the API running without a \r\n * window /document (eg. Node server, electron webworkers) and if we attempt to assign a history \r\n * object to a local variable or pass as an argument an \"Uncaught ReferenceError: JSON is not defined\" \r\n * exception will be thrown.\r\n * Defined as a function to support lazy / late binding environments.\r\n */\r\nexport function hasJSON(): boolean {\r\n    return Boolean((typeof JSON === strObject && JSON) || getGlobalInst(strJSON) !== null);\r\n}\r\n\r\n/**\r\n * Returns the global JSON object if it is present otherwise null.\r\n * This helper is used to access the JSON object without causing an exception\r\n * \"Uncaught ReferenceError: JSON is not defined\"\r\n */\r\nexport function getJSON(): JSON | null {\r\n    if (hasJSON()) {\r\n        return JSON || getGlobalInst(strJSON);\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\n/**\r\n * Returns the crypto object if it is present otherwise null.\r\n * This helper is used to access the crypto object from the current\r\n * global instance which could be window or globalThis for a web worker\r\n */\r\nexport function getCrypto(): Crypto | null {\r\n    return getGlobalInst(strCrypto);\r\n}\r\n"]}