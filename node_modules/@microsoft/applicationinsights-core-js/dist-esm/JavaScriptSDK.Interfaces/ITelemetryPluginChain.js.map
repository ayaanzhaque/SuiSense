{"version":3,"file":"ITelemetryPluginChain.js","sourceRoot":"","sources":["../../src/JavaScriptSDK.Interfaces/ITelemetryPluginChain.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,kCAAkC;AAClC,YAAY,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\"use strict\";\r\n\r\nimport { ITelemetryItem } from \"./ITelemetryItem\";\r\nimport { IProcessTelemetryContext } from './IProcessTelemetryContext';\r\nimport { ITelemetryPlugin } from './ITelemetryPlugin';\r\n\r\n/**\r\n * Configuration provided to SDK core\r\n */\r\nexport interface ITelemetryPluginChain {\r\n\r\n    /**\r\n     * Returns the underlying plugin that is being proxied for the processTelemetry call\r\n     */\r\n    getPlugin: () => ITelemetryPlugin;\r\n\r\n    /**\r\n     * Returns the next plugin\r\n     */\r\n    getNext: () => ITelemetryPluginChain;\r\n\r\n    /**\r\n     * Call back for telemetry processing before it it is sent\r\n     * @param env - This is the current event being reported\r\n     * @param itemCtx - This is the context for the current request, ITelemetryPlugin instances \r\n     * can optionally use this to access the current core instance or define / pass additional information\r\n     * to later plugins (vs appending items to the telemetry item)\r\n     */\r\n    processTelemetry: (env: ITelemetryItem, itemCtx:IProcessTelemetryContext) => void;\r\n}\r\n"]}