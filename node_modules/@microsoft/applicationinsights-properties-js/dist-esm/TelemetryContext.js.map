{"version":3,"file":"TelemetryContext.js","sourceRoot":"","sources":["../src/TelemetryContext.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * PropertiesPlugin.ts\r\n * @copyright Microsoft 2018\r\n */\r\n\r\nimport { ITelemetryItem, IProcessTelemetryContext, IDiagnosticLogger, CoreUtils, hasWindow, _InternalLogMessage } from '@microsoft/applicationinsights-core-js';\r\nimport { Session, _SessionManager } from './Context/Session';\r\nimport { Extensions, ITelemetryContext, IOperatingSystem, ITelemetryTrace, IWeb, SampleRate, CtxTagKeys, PageView } from '@microsoft/applicationinsights-common';\r\nimport { Application } from './Context/Application';\r\nimport { Device } from './Context/Device';\r\nimport { Internal } from './Context/Internal';\r\nimport { User } from './Context/User';\r\nimport { Location } from './Context/Location';\r\nimport { ITelemetryConfig } from './Interfaces/ITelemetryConfig';\r\nimport { TelemetryTrace } from './Context/TelemetryTrace';\r\n\r\nexport class TelemetryContext implements ITelemetryContext {\r\n\r\n    public application: Application; // The object describing a component tracked by this object - legacy\r\n    public device: Device; // The object describing a device tracked by this object.\r\n    public location: Location; // The object describing a location tracked by this object -legacy\r\n    public telemetryTrace: TelemetryTrace; // The object describing a operation tracked by this object.\r\n    public user: User; // The object describing a user tracked by this object.\r\n    public internal: Internal; // legacy\r\n    public session: Session; // The object describing a session tracked by this object.\r\n    public sessionManager: _SessionManager; // The session manager that manages session on the base of cookies.\r\n    public os: IOperatingSystem;\r\n    public web: IWeb;\r\n    public appId: () => string;\r\n\r\n    constructor(logger: IDiagnosticLogger, defaultConfig: ITelemetryConfig) {\r\n        let _self = this;\r\n        if (hasWindow()) {\r\n            _self.sessionManager = new _SessionManager(defaultConfig, logger);\r\n            _self.application = new Application();\r\n            _self.device = new Device();\r\n            _self.internal = new Internal(defaultConfig);\r\n            _self.location = new Location();\r\n            _self.user = new User(defaultConfig, logger);\r\n            _self.telemetryTrace = new TelemetryTrace(undefined, undefined, undefined, logger);\r\n            _self.session = new Session();\r\n        }\r\n        _self.appId = () => null;\r\n    }\r\n\r\n    public applySessionContext(event: ITelemetryItem, itemCtx?: IProcessTelemetryContext) {\r\n        let session = this.session;\r\n        let sessionManager = this.sessionManager;\r\n        const sessionContext = session || (sessionManager && sessionManager.automaticSession);\r\n        if (sessionContext) {\r\n            if (CoreUtils.isString(sessionContext.id)) {\r\n                event.ext.app.sesId = sessionContext.id;\r\n            }\r\n        }\r\n\r\n        if (session) {\r\n            // If customer set session info, apply his context; otherwise apply context automatically generated\r\n            if (CoreUtils.isString(session.id)) {\r\n                event.ext.app.sesId = session.id;\r\n            } else {\r\n                event.ext.app.sesId = sessionManager.automaticSession.id;\r\n            }\r\n        }\r\n    }\r\n\r\n    public applyOperatingSystemContxt(event: ITelemetryItem, itemCtx?: IProcessTelemetryContext) {\r\n        let os = this.os;\r\n        if (os && os.name) {\r\n            event.ext.os = os;\r\n        }\r\n    }\r\n\r\n    public applyApplicationContext(event: ITelemetryItem, itemCtx?: IProcessTelemetryContext) {\r\n        let application = this.application;\r\n        if (application) {\r\n\r\n            if (CoreUtils.isString(application.ver)) {\r\n                event.tags[CtxTagKeys.applicationVersion] = application.ver;\r\n            }\r\n            if (CoreUtils.isString(application.build)) {\r\n                event.tags[CtxTagKeys.applicationBuild] = application.build;\r\n            }\r\n        }\r\n    }\r\n\r\n    public applyDeviceContext(event: ITelemetryItem, itemCtx?: IProcessTelemetryContext) {\r\n        let device = this.device;\r\n        if (device) {\r\n            if (CoreUtils.isString(device.id)) {\r\n                event.ext.device.localId = device.id;\r\n            }\r\n\r\n            if (CoreUtils.isString(device.ip)) {\r\n                event.ext.device.ip = device.ip;\r\n            }\r\n\r\n            if (CoreUtils.isString(device.model)) {\r\n                event.ext.device.model = device.model;\r\n            }\r\n\r\n            if (CoreUtils.isString(device.deviceClass)) {\r\n                event.ext.device.deviceClass = device.deviceClass;\r\n            }\r\n        }\r\n    }\r\n\r\n    public applyInternalContext(event: ITelemetryItem, itemCtx?: IProcessTelemetryContext) {\r\n        let internal = this.internal;\r\n        if (internal) {\r\n            if (CoreUtils.isString(internal.agentVersion)) {\r\n                event.tags[CtxTagKeys.internalAgentVersion] = internal.agentVersion; // not mapped in CS 4.0\r\n            }\r\n            if (CoreUtils.isString(internal.sdkVersion)) {\r\n                event.tags[CtxTagKeys.internalSdkVersion] = internal.sdkVersion;\r\n            }\r\n\r\n            if (event.baseType === _InternalLogMessage.dataType || event.baseType === PageView.dataType) {\r\n                if (CoreUtils.isString(internal.snippetVer)) {\r\n                    event.tags[CtxTagKeys.internalSnippet] = internal.snippetVer;\r\n                }\r\n\r\n                if (CoreUtils.isString(internal.sdkSrc)) {\r\n                    event.tags[CtxTagKeys.internalSdkSrc] = internal.sdkSrc;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public applyLocationContext(event: ITelemetryItem, itemCtx?: IProcessTelemetryContext) {\r\n        let location = this.location;\r\n        if (location) {\r\n            if (CoreUtils.isString(location.ip)) {\r\n                event.tags[CtxTagKeys.locationIp] = location.ip;\r\n            }\r\n        }\r\n    }\r\n\r\n    public applyOperationContext(event: ITelemetryItem, itemCtx?: IProcessTelemetryContext) {\r\n        let telemetryTrace = this.telemetryTrace;\r\n        if (telemetryTrace) {\r\n            const trace = event.ext.trace || ({traceID: undefined, parentID: undefined} as ITelemetryTrace);\r\n            if (CoreUtils.isString(telemetryTrace.traceID)) {\r\n                trace.traceID = telemetryTrace.traceID;\r\n            }\r\n\r\n            if (CoreUtils.isString(telemetryTrace.name)) {\r\n                trace.name = telemetryTrace.name;\r\n            }\r\n\r\n            if (CoreUtils.isString(telemetryTrace.parentID)) {\r\n                trace.parentID = telemetryTrace.parentID;\r\n            }\r\n\r\n            event.ext.trace = trace;\r\n        }\r\n    }\r\n\r\n    public applyWebContext(event: ITelemetryItem, itemCtx?: IProcessTelemetryContext) {\r\n        let web = this.web;\r\n        if (web) {\r\n            event.ext.web = event.ext.web || {};\r\n            event.ext.web = web;\r\n        }\r\n    }\r\n\r\n    public applyUserContext(event: ITelemetryItem, itemCtx?: IProcessTelemetryContext) {\r\n        let user = this.user;\r\n        if (user) {\r\n            if (!event.tags) {\r\n                event.tags = [];\r\n            }\r\n\r\n            // stays in tags\r\n            if (CoreUtils.isString(user.accountId)) {\r\n                event.tags[CtxTagKeys.userAccountId] = user.accountId;\r\n            }\r\n\r\n            // CS 4.0\r\n            if (CoreUtils.isString( user.id)) {\r\n                event.ext.user.id = user.id;\r\n            }\r\n\r\n            if (CoreUtils.isString(user.authenticatedId)) {\r\n                event.ext.user.authId = user.authenticatedId;\r\n            }\r\n        }\r\n    }\r\n\r\n    public cleanUp(event:ITelemetryItem, itemCtx?: IProcessTelemetryContext) {\r\n        if (event.ext[Extensions.DeviceExt] && CoreUtils.objKeys(event.ext[Extensions.DeviceExt]).length === 0) {\r\n            delete event.ext[Extensions.DeviceExt];\r\n        }\r\n        if (event.ext[Extensions.UserExt] && CoreUtils.objKeys(event.ext[Extensions.UserExt]).length === 0) {\r\n            delete event.ext[Extensions.UserExt];\r\n        }\r\n        if (event.ext[Extensions.WebExt] && CoreUtils.objKeys(event.ext[Extensions.WebExt]).length === 0) {\r\n            delete event.ext[Extensions.WebExt];\r\n        }\r\n        if (event.ext[Extensions.OSExt] && CoreUtils.objKeys(event.ext[Extensions.OSExt]).length === 0) {\r\n            delete event.ext[Extensions.OSExt];\r\n        }\r\n        if (event.ext[Extensions.AppExt] && CoreUtils.objKeys(event.ext[Extensions.AppExt]).length === 0) {\r\n            delete event.ext[Extensions.AppExt];\r\n        }\r\n        if (event.ext[Extensions.TraceExt] && CoreUtils.objKeys(event.ext[Extensions.TraceExt]).length === 0) {\r\n            delete event.ext[Extensions.TraceExt];\r\n        }\r\n    }\r\n}"]}