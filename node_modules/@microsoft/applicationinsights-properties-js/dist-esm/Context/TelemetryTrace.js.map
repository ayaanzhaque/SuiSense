{"version":3,"file":"TelemetryTrace.js","sourceRoot":"","sources":["../../src/Context/TelemetryTrace.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,kCAAkC;AAElC,OAAO,EAAE,IAAI,EAAgC,aAAa,EAAG,MAAM,uCAAuC,CAAC;AAC3G,OAAO,EAAE,WAAW,EAAqB,MAAM,wCAAwC,CAAC;AAExF;IAOI,wBAAY,EAAW,EAAE,QAAiB,EAAE,IAAa,EAAE,MAA0B;QACjF,IAAI,CAAC,OAAO,GAAG,EAAE,IAAI,IAAI,CAAC,aAAa,EAAE,CAAC;QAC1C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,QAAQ,GAAG,WAAW,EAAE,CAAC;QAC7B,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,QAAQ,IAAI,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,QAAQ,CAAC;QAClC,CAAC;QACD,IAAI,CAAC,IAAI,GAAG,aAAa,CAAC,cAAc,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;IAChE,CAAC;IACL,qBAAC;AAAD,CAAC,AAjBD,IAiBC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport { Util, ITelemetryTrace, ITraceState, DataSanitizer  } from '@microsoft/applicationinsights-common';\r\nimport { getLocation, IDiagnosticLogger } from '@microsoft/applicationinsights-core-js';\r\n\r\nexport class TelemetryTrace implements ITelemetryTrace {\r\n\r\n    public traceID: string;\r\n    public parentID: string;\r\n    public traceState: ITraceState;\r\n    public name: string;\r\n\r\n    constructor(id?: string, parentId?: string, name?: string, logger?: IDiagnosticLogger) {\r\n        this.traceID = id || Util.generateW3CId();\r\n        this.parentID = parentId;\r\n        this.name = name;\r\n        let location = getLocation();\r\n        if (!name && location && location.pathname) {\r\n            this.name = location.pathname;\r\n        }\r\n        this.name = DataSanitizer.sanitizeString(logger, this.name);\r\n    }\r\n}"]}