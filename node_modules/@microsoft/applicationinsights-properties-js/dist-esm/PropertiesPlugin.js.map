{"version":3,"file":"PropertiesPlugin.js","sourceRoot":"","sources":["../src/PropertiesPlugin.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * PropertiesPlugin.ts\r\n * @copyright Microsoft 2018\r\n */\r\n\r\nimport {\r\n    BaseTelemetryPlugin, IConfiguration, CoreUtils,\r\n    IAppInsightsCore, IPlugin, ITelemetryItem, IProcessTelemetryContext, _InternalLogMessage, LoggingSeverity, _InternalMessageId, getNavigator,\r\n    ITelemetryPluginChain    \r\n} from '@microsoft/applicationinsights-core-js';\r\nimport { TelemetryContext } from './TelemetryContext';\r\nimport { PageView, ConfigurationManager,\r\n    IConfig, BreezeChannelIdentifier, PropertiesPluginIdentifier, IPropertiesPlugin, Extensions, Util } from '@microsoft/applicationinsights-common';\r\nimport { ITelemetryConfig } from './Interfaces/ITelemetryConfig';\r\n\r\nexport default class PropertiesPlugin extends BaseTelemetryPlugin implements IPropertiesPlugin {\r\n\r\n    public static getDefaultConfig(): ITelemetryConfig {\r\n        const defaultConfig: ITelemetryConfig = {\r\n            instrumentationKey: () => undefined,\r\n            accountId: () => null,\r\n            sessionRenewalMs: () => 30 * 60 * 1000,\r\n            samplingPercentage: () => 100,\r\n            sessionExpirationMs: () => 24 * 60 * 60 * 1000,\r\n            cookieDomain: () => null,\r\n            sdkExtension: () => null,\r\n            isBrowserLinkTrackingEnabled: () => false,\r\n            appId: () => null,\r\n            namePrefix: () => undefined\r\n        }\r\n        return defaultConfig;\r\n    }\r\n    public context: TelemetryContext;\r\n\r\n    public priority = 110;\r\n    public identifier = PropertiesPluginIdentifier;\r\n    private _breezeChannel: IPlugin; // optional. If exists, grab appId from it\r\n\r\n    private _extensionConfig: ITelemetryConfig;\r\n\r\n    initialize(config: IConfiguration & IConfig, core: IAppInsightsCore, extensions: IPlugin[], pluginChain?:ITelemetryPluginChain) {\r\n        super.initialize(config, core, extensions, pluginChain);\r\n        let ctx = this._getTelCtx();\r\n        let identifier = this.identifier;\r\n        const defaultConfig: ITelemetryConfig = PropertiesPlugin.getDefaultConfig();\r\n        this._extensionConfig = this._extensionConfig || PropertiesPlugin.getDefaultConfig();\r\n        for (const field in defaultConfig) {\r\n            this._extensionConfig[field] = () => ctx.getConfig(identifier, field, defaultConfig[field]());\r\n        }\r\n\r\n        this.context = new TelemetryContext(core.logger, this._extensionConfig);\r\n        this._breezeChannel = Util.getExtension(extensions, BreezeChannelIdentifier);\r\n        this.context.appId = () => this._breezeChannel ? this._breezeChannel[\"_appId\"] : null;\r\n    }\r\n\r\n    /**\r\n     * Add Part A fields to the event\r\n     * @param event The event that needs to be processed\r\n     */\r\n    processTelemetry(event: ITelemetryItem, itemCtx?: IProcessTelemetryContext) {\r\n        if (CoreUtils.isNullOrUndefined(event)) {\r\n            // TODO(barustum): throw an internal event once we have support for internal logging\r\n        } else {\r\n            itemCtx = this._getTelCtx(itemCtx);\r\n            // If the envelope is PageView, reset the internal message count so that we can send internal telemetry for the new page.\r\n            if (event.name === PageView.envelopeType) {\r\n                itemCtx.diagLog().resetInternalMessageCount();\r\n            }\r\n\r\n            if (this.context.session) {\r\n                // If customer did not provide custom session id update the session manager\r\n                if (typeof this.context.session.id !== \"string\") {\r\n                    this.context.sessionManager.update();\r\n                }\r\n            }\r\n\r\n            this._processTelemetryInternal(event, itemCtx);\r\n\r\n            if (this.context && this.context.user && this.context.user.isNewUser) {\r\n                this.context.user.isNewUser = false;\r\n                const message = new _InternalLogMessage(_InternalMessageId.SendBrowserInfoOnUserInit, ((getNavigator()||{} as any).userAgent||\"\"));\r\n                itemCtx.diagLog().logInternalMessage(LoggingSeverity.CRITICAL, message);\r\n            }\r\n\r\n            this.processNext(event, itemCtx);\r\n        }\r\n    }\r\n\r\n    private _processTelemetryInternal(event: ITelemetryItem, itemCtx: IProcessTelemetryContext) {\r\n        // set part A  fields\r\n        if (!event.tags) {\r\n            event.tags = [];\r\n        }\r\n\r\n        if (!event.ext) {\r\n            event.ext = {};\r\n        }\r\n\r\n        let ext = event.ext;\r\n        ext[Extensions.DeviceExt] = ext[Extensions.DeviceExt] || {};\r\n        ext[Extensions.WebExt] = ext[Extensions.WebExt] || {};\r\n        ext[Extensions.UserExt] = ext[Extensions.UserExt] || {};\r\n        ext[Extensions.OSExt] = ext[Extensions.OSExt] || {};\r\n        ext[Extensions.AppExt] = ext[Extensions.AppExt] || {};\r\n        ext[Extensions.TraceExt] = ext[Extensions.TraceExt] || {};\r\n\r\n        let context = this.context;\r\n        context.applySessionContext(event, itemCtx);\r\n        context.applyApplicationContext(event, itemCtx);\r\n        context.applyDeviceContext(event, itemCtx);\r\n        context.applyOperationContext(event, itemCtx);\r\n        context.applyUserContext(event, itemCtx);\r\n        context.applyOperatingSystemContxt(event, itemCtx);\r\n        context.applyWebContext(event, itemCtx);\r\n\r\n        context.applyLocationContext(event, itemCtx); // legacy tags\r\n        context.applyInternalContext(event, itemCtx); // legacy tags\r\n        context.cleanUp(event, itemCtx);\r\n    }\r\n}"]}