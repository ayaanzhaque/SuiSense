// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
import { Envelope as AIEnvelope } from '../../Interfaces/Contracts/Generated/Envelope';
import { DataSanitizer } from './DataSanitizer';
import { FieldType } from '../../Enums';
import { Util } from '../../Util';
import { CoreUtils } from '@microsoft/applicationinsights-core-js';
var Envelope = /** @class */ (function (_super) {
    __extends(Envelope, _super);
    /**
     * Constructs a new instance of telemetry data.
     */
    function Envelope(logger, data, name) {
        var _this = _super.call(this) || this;
        _this.name = DataSanitizer.sanitizeString(logger, name) || Util.NotSpecified;
        _this.data = data;
        _this.time = CoreUtils.toISOString(new Date());
        _this.aiDataContract = {
            time: FieldType.Required,
            iKey: FieldType.Required,
            name: FieldType.Required,
            sampleRate: function () {
                return (_this.sampleRate === 100) ? FieldType.Hidden : FieldType.Required;
            },
            tags: FieldType.Required,
            data: FieldType.Required
        };
        return _this;
    }
    return Envelope;
}(AIEnvelope));
export { Envelope };
//# sourceMappingURL=Envelope.js.map