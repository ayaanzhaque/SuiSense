// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
/**
 * Type of storage to differentiate between local storage and session storage
 */
export var StorageType;
(function (StorageType) {
    StorageType[StorageType["LocalStorage"] = 0] = "LocalStorage";
    StorageType[StorageType["SessionStorage"] = 1] = "SessionStorage";
})(StorageType || (StorageType = {}));
/**
 * Enum is used in aiDataContract to describe how fields are serialized.
 * For instance: (Fieldtype.Required | FieldType.Array) will mark the field as required and indicate it's an array
 */
export var FieldType;
(function (FieldType) {
    FieldType[FieldType["Default"] = 0] = "Default";
    FieldType[FieldType["Required"] = 1] = "Required";
    FieldType[FieldType["Array"] = 2] = "Array";
    FieldType[FieldType["Hidden"] = 4] = "Hidden";
})(FieldType || (FieldType = {}));
;
export var DistributedTracingModes;
(function (DistributedTracingModes) {
    /**
     * (Default) Send Application Insights correlation headers
     */
    DistributedTracingModes[DistributedTracingModes["AI"] = 0] = "AI";
    /**
     * Send both W3C Trace Context headers and back-compatibility Application Insights headers
     */
    DistributedTracingModes[DistributedTracingModes["AI_AND_W3C"] = 1] = "AI_AND_W3C";
    /**
     * Send W3C Trace Context headers
     */
    DistributedTracingModes[DistributedTracingModes["W3C"] = 2] = "W3C";
})(DistributedTracingModes || (DistributedTracingModes = {}));
//# sourceMappingURL=Enums.js.map