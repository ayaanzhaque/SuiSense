{"version":3,"file":"EnvelopeCreator.js","sourceRoot":"","sources":["../src/EnvelopeCreator.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n    IEnvelope, Data, Envelope,\r\n    RemoteDependencyData, Event, Exception,\r\n    Metric, PageView, Trace, PageViewPerformance, IDependencyTelemetry,\r\n    IPageViewPerformanceTelemetry, CtxTagKeys,\r\n    HttpMethod, IPageViewTelemetryInternal, IWeb,\r\n    Util,\r\n    IExceptionTelemetry,\r\n    IExceptionInternal,\r\n    SampleRate\r\n} from '@microsoft/applicationinsights-common';\r\nimport {\r\n    ITelemetryItem, CoreUtils,\r\n    IDiagnosticLogger, LoggingSeverity, _InternalMessageId,\r\n    hasJSON, getJSON\r\n} from '@microsoft/applicationinsights-core-js';\r\n\r\n// these two constants are used to filter out properties not needed when trying to extract custom properties and measurements from the incoming payload\r\nconst baseType: string = \"baseType\";\r\nconst baseData: string = \"baseData\";\r\n\r\nexport abstract class EnvelopeCreator {\r\n    public static Version = \"2.5.5\";\r\n\r\n    protected static extractPropsAndMeasurements(data: { [key: string]: any }, properties: { [key: string]: any }, measurements: { [key: string]: any }) {\r\n        if (!CoreUtils.isNullOrUndefined(data)) {\r\n            for (const key in data) {\r\n                if (data.hasOwnProperty(key)) {\r\n                    const value = data[key];\r\n                    if (CoreUtils.isNumber(value)) {\r\n                        measurements[key] = value;\r\n                    } else if (CoreUtils.isString(value)) {\r\n                        properties[key] = value;\r\n                    } else if (hasJSON()) {\r\n                        properties[key] = getJSON().stringify(value);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // TODO: Do we want this to take logger as arg or use this._logger as nonstatic?\r\n    protected static createEnvelope<T>(logger: IDiagnosticLogger, envelopeType: string, telemetryItem: ITelemetryItem, data: Data<T>): IEnvelope {\r\n        const envelope = new Envelope(logger, data, envelopeType);\r\n        if (telemetryItem[SampleRate]) {\r\n            envelope.sampleRate = telemetryItem[SampleRate];\r\n        }\r\n        envelope.iKey = telemetryItem.iKey;\r\n        const iKeyNoDashes = telemetryItem.iKey.replace(/-/g, \"\");\r\n        envelope.name = envelope.name.replace(\"{0}\", iKeyNoDashes);\r\n\r\n        // extract all extensions from ctx\r\n        EnvelopeCreator.extractPartAExtensions(telemetryItem, envelope);\r\n\r\n        // loop through the envelope tags (extension of Part A) and pick out the ones that should go in outgoing envelope tags\r\n        if (!telemetryItem.tags) {\r\n            telemetryItem.tags = [];\r\n        }\r\n\r\n        return envelope;\r\n    }\r\n\r\n    /*\r\n     * Maps Part A data from CS 4.0\r\n     */\r\n    private static extractPartAExtensions(item: ITelemetryItem, env: IEnvelope) {\r\n        // todo: switch to keys from common in this method\r\n        if (!env.tags) {\r\n            env.tags = {};\r\n        }\r\n\r\n        if (!item.ext) {\r\n            item.ext = {};\r\n        }\r\n\r\n        if (!item.tags) {\r\n            item.tags = [];\r\n        }\r\n\r\n        if (item.ext.user) {\r\n            if (item.ext.user.authId) {\r\n                env.tags[CtxTagKeys.userAuthUserId] = item.ext.user.authId;\r\n            }\r\n\r\n            const userId = item.ext.user.id || item.ext.user.localId;\r\n            if (userId) {\r\n                env.tags[CtxTagKeys.userId] = userId;\r\n            }\r\n        }\r\n\r\n        if (item.ext.app) {\r\n            if (item.ext.app.sesId) {\r\n                env.tags[CtxTagKeys.sessionId] = item.ext.app.sesId;\r\n            }\r\n        }\r\n\r\n        if (item.ext.device) {\r\n            if (item.ext.device.id || item.ext.device.localId) {\r\n                env.tags[CtxTagKeys.deviceId] = item.ext.device.id || item.ext.device.localId;\r\n            }\r\n\r\n            if (item.ext.device.deviceClass) {\r\n                env.tags[CtxTagKeys.deviceType] = item.ext.device.deviceClass;\r\n            }\r\n\r\n            if (item.ext.device.ip) {\r\n                env.tags[CtxTagKeys.deviceIp] = item.ext.device.ip;\r\n            }\r\n        }\r\n\r\n\r\n        if (item.ext.web) {\r\n            const web: IWeb = item.ext.web as IWeb;\r\n\r\n            if (web.browserLang) {\r\n                env.tags[CtxTagKeys.deviceLanguage] = web.browserLang;\r\n            }\r\n            if (web.browserVer) {\r\n                env.tags[CtxTagKeys.deviceBrowserVersion] = web.browserVer;\r\n            }\r\n\r\n            if (web.browser) {\r\n                env.tags[CtxTagKeys.deviceBrowser] = web.browser;\r\n            }\r\n            env.data = env.data || {};\r\n            env.data.baseData = env.data.baseData || {};\r\n            env.data.baseData.properties = env.data.baseData.properties || {};\r\n\r\n            if (web.domain) {\r\n                env.data.baseData.properties['domain'] = web.domain;\r\n            }\r\n\r\n            if (web.isManual) {\r\n                env.data.baseData.properties['isManual'] = web.isManual.toString();\r\n            }\r\n\r\n            if (web.screenRes) {\r\n                env.data.baseData.properties['screenRes'] = web.screenRes;\r\n            }\r\n\r\n            if (web.userConsent) {\r\n                env.data.baseData.properties['userConsent'] = web.userConsent.toString();\r\n            }\r\n        }\r\n\r\n        if (item.ext.device) {\r\n            if (item.ext.device.model) {\r\n                env.tags[CtxTagKeys.deviceModel] = item.ext.device.model;\r\n            }\r\n        }\r\n\r\n        if (item.ext.os && item.ext.os.name) {\r\n            env.tags[CtxTagKeys.deviceOS] = item.ext.os.name;\r\n        }\r\n\r\n        if (item.ext.device) {\r\n            if (item.ext.device.deviceType) {\r\n                env.tags[CtxTagKeys.deviceType] = item.ext.device.deviceType;\r\n            }\r\n        }\r\n\r\n        // No support for mapping Trace.traceState to 2.0 as it is currently empty\r\n\r\n        if (item.ext.trace) {\r\n            if (item.ext.trace.parentID) {\r\n                env.tags[CtxTagKeys.operationParentId] = item.ext.trace.parentID;\r\n            }\r\n\r\n            if (item.ext.trace.name) {\r\n                env.tags[CtxTagKeys.operationName] = item.ext.trace.name;\r\n            }\r\n\r\n            if (item.ext.trace.traceID) {\r\n                env.tags[CtxTagKeys.operationId] = item.ext.trace.traceID;\r\n            }\r\n        }\r\n\r\n        // Sample 4.0 schema\r\n        //  {\r\n        //     \"time\" : \"2018-09-05T22:51:22.4936Z\",\r\n        //     \"name\" : \"MetricWithNamespace\",\r\n        //     \"iKey\" : \"ABC-5a4cbd20-e601-4ef5-a3c6-5d6577e4398e\",\r\n        //     \"ext\": {  \"cloud\": {\r\n        //          \"role\": \"WATSON3\",\r\n        //          \"roleInstance\": \"CO4AEAP00000260\"\r\n        //      },\r\n        //      \"device\": {}, \"correlation\": {} },\r\n        //      \"tags\": [\r\n        //        { \"amazon.region\" : \"east2\" },\r\n        //        { \"os.expid\" : \"wp:02df239\" }\r\n        //     ]\r\n        //   }\r\n\r\n        const tgs = {};\r\n        // deals with tags.push({object})\r\n        for(let i = item.tags.length - 1; i >= 0; i--){\r\n            const tg = item.tags[i];\r\n            // CoreUtils.objKeys returns an array of keys\r\n            CoreUtils.arrForEach(CoreUtils.objKeys(tg), key => {\r\n                tgs[key] = tg[key];\r\n            })\r\n            item.tags.splice(i, 1);\r\n        }\r\n        // deals with tags[key]=value\r\n        for(const tg in item.tags){\r\n            tgs[tg] = item.tags[tg];\r\n        }\r\n\r\n        env.tags = { ...env.tags, ...tgs };\r\n        if(!env.tags[CtxTagKeys.internalSdkVersion]) {\r\n            // Append a version in case it is not already set\r\n            env.tags[CtxTagKeys.internalSdkVersion] = `javascript:${EnvelopeCreator.Version}`;\r\n        }\r\n    }\r\n    protected _logger: IDiagnosticLogger;\r\n\r\n    abstract Create(logger: IDiagnosticLogger, telemetryItem: ITelemetryItem): IEnvelope;\r\n}\r\n\r\nexport class DependencyEnvelopeCreator extends EnvelopeCreator {\r\n    static DependencyEnvelopeCreator = new DependencyEnvelopeCreator();\r\n\r\n    Create(logger: IDiagnosticLogger, telemetryItem: ITelemetryItem): IEnvelope {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(\r\n                LoggingSeverity.CRITICAL,\r\n                _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n\r\n        const customMeasurements = telemetryItem.baseData.measurements || {};\r\n        const customProperties = telemetryItem.baseData.properties || {};\r\n        EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, customProperties, customMeasurements);\r\n        const bd = telemetryItem.baseData as IDependencyTelemetry;\r\n        if (CoreUtils.isNullOrUndefined(bd)) {\r\n            logger.warnToConsole(\"Invalid input for dependency data\");\r\n            return null;\r\n        }\r\n\r\n        const id = bd.id;\r\n        const absoluteUrl = bd.target;\r\n        const command = bd.name;\r\n        const duration = bd.duration;\r\n        const success = bd.success;\r\n        const resultCode = bd.responseCode;\r\n        const requestAPI = bd.type;\r\n        const correlationContext = bd.correlationContext;\r\n        const method = bd.properties && bd.properties[HttpMethod] ? bd.properties[HttpMethod] : \"GET\";\r\n        const baseData = new RemoteDependencyData(logger, id, absoluteUrl, command, duration, success, resultCode, method, requestAPI, correlationContext, customProperties, customMeasurements);\r\n        const data = new Data<RemoteDependencyData>(RemoteDependencyData.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope<RemoteDependencyData>(logger, RemoteDependencyData.envelopeType, telemetryItem, data);\r\n    }\r\n}\r\n\r\nexport class EventEnvelopeCreator extends EnvelopeCreator {\r\n    static EventEnvelopeCreator = new EventEnvelopeCreator();\r\n\r\n    Create(logger: IDiagnosticLogger, telemetryItem: ITelemetryItem): IEnvelope {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(\r\n                LoggingSeverity.CRITICAL,\r\n                _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n\r\n        let customProperties = {};\r\n        let customMeasurements = {};\r\n        if (telemetryItem.baseType !== Event.dataType) {\r\n            customProperties['baseTypeSource'] = telemetryItem.baseType; // save the passed in base type as a property\r\n        }\r\n\r\n        if (telemetryItem.baseType === Event.dataType) { // take collection\r\n            customProperties = telemetryItem.baseData.properties || {};\r\n            customMeasurements = telemetryItem.baseData.measurements || {};\r\n        } else { // if its not a known type, convert to custom event\r\n            if (telemetryItem.baseData) {\r\n                EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.baseData, customProperties, customMeasurements);\r\n            }\r\n        }\r\n\r\n        // Exract root level properties from part C telemetryItem.data\r\n        EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, customProperties, customMeasurements);\r\n        const eventName = telemetryItem.baseData.name;\r\n        const baseData = new Event(logger, eventName, customProperties, customMeasurements);\r\n        const data = new Data<Event>(Event.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope<Event>(logger, Event.envelopeType, telemetryItem, data);\r\n    }\r\n}\r\n\r\nexport class ExceptionEnvelopeCreator extends EnvelopeCreator {\r\n    static ExceptionEnvelopeCreator = new ExceptionEnvelopeCreator();\r\n\r\n    Create(logger: IDiagnosticLogger, telemetryItem: ITelemetryItem): IEnvelope {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(\r\n                LoggingSeverity.CRITICAL,\r\n                _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n        const bd = telemetryItem.baseData as IExceptionInternal;\r\n        const baseData = Exception.CreateFromInterface(logger, bd);\r\n        const data = new Data<Exception>(Exception.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope<Exception>(logger, Exception.envelopeType, telemetryItem, data);\r\n    }\r\n}\r\n\r\nexport class MetricEnvelopeCreator extends EnvelopeCreator {\r\n    static MetricEnvelopeCreator = new MetricEnvelopeCreator();\r\n\r\n    Create(logger: IDiagnosticLogger, telemetryItem: ITelemetryItem): IEnvelope {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(\r\n                LoggingSeverity.CRITICAL,\r\n                _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n\r\n        const props = telemetryItem.baseData.properties || {};\r\n        const measurements = telemetryItem.baseData.measurements || {};\r\n        EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, props, measurements);\r\n        const name = telemetryItem.baseData.name;\r\n        const average = telemetryItem.baseData.average;\r\n        const sampleCount = telemetryItem.baseData.sampleCount;\r\n        const min = telemetryItem.baseData.min;\r\n        const max = telemetryItem.baseData.max;\r\n        const baseData = new Metric(logger, name, average, sampleCount, min, max, props, measurements);\r\n        const data = new Data<Metric>(Metric.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope<Metric>(logger, Metric.envelopeType, telemetryItem, data);\r\n    }\r\n}\r\n\r\nexport class PageViewEnvelopeCreator extends EnvelopeCreator {\r\n    static PageViewEnvelopeCreator = new PageViewEnvelopeCreator();\r\n\r\n    Create(logger: IDiagnosticLogger, telemetryItem: ITelemetryItem): IEnvelope {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(\r\n                LoggingSeverity.CRITICAL,\r\n                _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n\r\n        // Since duration is not part of the domain properties in Common Schema, extract it from part C\r\n        let duration;\r\n        if (!CoreUtils.isNullOrUndefined(telemetryItem.baseData) &&\r\n            !CoreUtils.isNullOrUndefined(telemetryItem.baseData.properties) &&\r\n            !CoreUtils.isNullOrUndefined(telemetryItem.baseData.properties.duration)) { // from part B properties\r\n            duration = telemetryItem.baseData.properties.duration;\r\n            delete telemetryItem.baseData.properties.duration;\r\n        } else if (!CoreUtils.isNullOrUndefined(telemetryItem.data) &&\r\n            !CoreUtils.isNullOrUndefined(telemetryItem.data[\"duration\"])) { // from custom properties\r\n            duration = telemetryItem.data[\"duration\"];\r\n            delete telemetryItem.data[\"duration\"];\r\n        }\r\n\r\n        const bd = telemetryItem.baseData as IPageViewTelemetryInternal;\r\n\r\n         // special case: pageview.id is grabbed from current operation id. Analytics plugin is decoupled from properties plugin, so this is done here instead. This can be made a default telemetry intializer instead if needed to be decoupled from channel\r\n        let currentContextId;\r\n        if (telemetryItem.ext && telemetryItem.ext.trace && telemetryItem.ext.trace.traceID) {\r\n            currentContextId = telemetryItem.ext.trace.traceID;\r\n        }\r\n        const id = bd.id || currentContextId\r\n        const name = bd.name;\r\n        const url = bd.uri;\r\n        const properties = bd.properties || {};\r\n        const measurements = bd.measurements || {};\r\n\r\n        // refUri is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n        if (!CoreUtils.isNullOrUndefined(bd.refUri)) {\r\n            properties[\"refUri\"] = bd.refUri;\r\n        }\r\n\r\n        // pageType is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n        if (!CoreUtils.isNullOrUndefined(bd.pageType)) {\r\n            properties[\"pageType\"] = bd.pageType;\r\n        }\r\n\r\n        // isLoggedIn is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n        if (!CoreUtils.isNullOrUndefined(bd.isLoggedIn)) {\r\n            properties[\"isLoggedIn\"] = bd.isLoggedIn.toString();\r\n        }\r\n\r\n        // pageTags is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n        if (!CoreUtils.isNullOrUndefined(bd.properties)) {\r\n            const pageTags = bd.properties;\r\n            for (const key in pageTags) {\r\n                if (pageTags.hasOwnProperty(key)) {\r\n                    properties[key] = pageTags[key];\r\n                }\r\n            }\r\n        }\r\n\r\n        EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, properties, measurements);\r\n        const baseData = new PageView(logger, name, url, duration, properties, measurements, id);\r\n        const data = new Data<PageView>(PageView.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope<PageView>(logger, PageView.envelopeType, telemetryItem, data);\r\n    }\r\n}\r\n\r\nexport class PageViewPerformanceEnvelopeCreator extends EnvelopeCreator {\r\n    static PageViewPerformanceEnvelopeCreator = new PageViewPerformanceEnvelopeCreator();\r\n\r\n    Create(logger: IDiagnosticLogger, telemetryItem: ITelemetryItem): IEnvelope {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(\r\n                LoggingSeverity.CRITICAL,\r\n                _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n\r\n        const bd = telemetryItem.baseData as IPageViewPerformanceTelemetry;\r\n        const name = bd.name;\r\n        const url = bd.uri || (bd as any).url;\r\n        const properties = bd.properties || {};\r\n        const measurements = bd.measurements || {};\r\n        EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, properties, measurements);\r\n        const baseData = new PageViewPerformance(logger, name, url, undefined, properties, measurements, bd);\r\n        const data = new Data<PageViewPerformance>(PageViewPerformance.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope<PageViewPerformance>(logger, PageViewPerformance.envelopeType, telemetryItem, data);\r\n    }\r\n}\r\n\r\nexport class TraceEnvelopeCreator extends EnvelopeCreator {\r\n    static TraceEnvelopeCreator = new TraceEnvelopeCreator();\r\n\r\n    Create(logger: IDiagnosticLogger, telemetryItem: ITelemetryItem): IEnvelope {\r\n        this._logger = logger;\r\n        if (CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n            this._logger.throwInternal(\r\n                LoggingSeverity.CRITICAL,\r\n                _InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n        }\r\n\r\n        const message = telemetryItem.baseData.message;\r\n        const severityLevel = telemetryItem.baseData.severityLevel;\r\n        const props = telemetryItem.baseData.properties || {};\r\n        const measurements = telemetryItem.baseData.measurements || {};\r\n        EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, props, measurements);\r\n        const baseData = new Trace(logger, message, severityLevel, props, measurements);\r\n        const data = new Data<Trace>(Trace.dataType, baseData);\r\n        return EnvelopeCreator.createEnvelope<Trace>(logger, Trace.envelopeType, telemetryItem, data);\r\n    }\r\n}\r\n"]}